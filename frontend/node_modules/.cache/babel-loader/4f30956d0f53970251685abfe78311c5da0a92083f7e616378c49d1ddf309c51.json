{"ast":null,"code":"const API_URL = \"http://localhost:5000/api/products\";\nexport const fetchProducts = async () => {\n  const response = await fetch(API_URL);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};\nexport const addProduct = async product => {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(product)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to add product');\n  }\n  return await response.json();\n};\nexport const updateProduct = async (id, product) => {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(product)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update product');\n  }\n  return await response.json();\n};\nexport const deleteProduct = async id => {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw new Error('Failed to delete product');\n  }\n};","map":{"version":3,"names":["API_URL","fetchProducts","response","fetch","ok","Error","json","addProduct","product","method","headers","body","JSON","stringify","updateProduct","id","deleteProduct"],"sources":["C:/Users/Satwika/Downloads/full_stack_project/fronte/src/api.js"],"sourcesContent":["const API_URL = \"http://localhost:5000/api/products\";\r\n\r\nexport const fetchProducts = async () => {\r\n  const response = await fetch(API_URL);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const addProduct = async (product) => {\r\n  const response = await fetch(API_URL, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(product),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to add product');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const updateProduct = async (id, product) => {\r\n  const response = await fetch(`${API_URL}/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(product),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to update product');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  const response = await fetch(`${API_URL}/${id}`, { method: \"DELETE\" });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to delete product');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;EACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;IACpCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEP,OAAO,KAAK;EAClD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,IAAIe,EAAE,EAAE,EAAE;IAC/CN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMU,aAAa,GAAG,MAAOD,EAAE,IAAK;EACzC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,IAAIe,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE;EAAS,CAAC,CAAC;EACtE,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}