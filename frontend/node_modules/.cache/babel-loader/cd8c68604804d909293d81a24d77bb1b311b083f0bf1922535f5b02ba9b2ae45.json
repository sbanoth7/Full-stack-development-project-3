{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satwika\\\\Downloads\\\\full_stack_project\\\\fronte\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchProducts, deleteProduct } from '../api';\nimport ProductForm from './ProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  // Define the loadProducts function\n  const loadProducts = async () => {\n    try {\n      const data = await fetchProducts();\n      console.log('Fetched products:', data);\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Load products when the component mounts\n  useEffect(() => {\n    loadProducts();\n  }, []);\n  const handleDelete = async id => {\n    await deleteProduct(id);\n    setProducts(products.filter(product => product.id !== id));\n  };\n  const handleEdit = product => {\n    setSelectedProduct(product);\n    setIsEditing(true);\n  };\n  const handleAdd = () => {\n    setSelectedProduct(null);\n    setIsEditing(true);\n  };\n  const handleProductSaved = () => {\n    setIsEditing(false);\n    setSelectedProduct(null);\n    loadProducts(); // Refresh product list after saving\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    setSelectedProduct(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(ProductForm, {\n      existingProduct: selectedProduct,\n      onProductSaved: handleProductSaved,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: $\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", product.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(product),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(product.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"GA/FMjc/f6D6MhcXMeAzh3W2pHg=\");\n_c = ProductList;\nexport default ProductList;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchProducts, deleteProduct } from '../api';\n// import ProductForm from './ProductForm';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   useEffect(() => {\n//     const loadProducts = async () => {\n//       try {\n//         const data = await fetchProducts();\n//         console.log('Fetched products:', data);\n//         setProducts(data);\n//       } catch (error) {\n//         console.error('Error fetching products:', error);\n//       }\n//     };\n\n//     loadProducts();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     await deleteProduct(id);\n//     setProducts(products.filter(product => product.id !== id));\n//   };\n\n//   const handleEdit = (product) => {\n//     setSelectedProduct(product);\n//     setIsEditing(true);\n//   };\n\n//   const handleAdd = () => {\n//     setSelectedProduct(null);\n//     setIsEditing(true);\n//   };\n\n//   const handleProductSaved = () => {\n//     setIsEditing(false);\n//     setSelectedProduct(null);\n//     loadProducts(); // Refresh product list\n//   };\n\n//   const handleCancel = () => {\n//     setIsEditing(false);\n//     setSelectedProduct(null);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {isEditing ? (\n//         <ProductForm \n//           existingProduct={selectedProduct} \n//           onProductSaved={handleProductSaved}\n//           onCancel={handleCancel} \n//         />\n//       ) : (\n//         <button onClick={handleAdd}>Add Product</button>\n//       )}\n//       {products.length > 0 ? (\n//         products.map(product => (\n//           <div key={product.id} className=\"product\">\n//             <h3>{product.name}</h3>\n//             <p>{product.description}</p>\n//             <p>Price: ${product.price}</p>\n//             <p>Quantity: {product.quantity}</p>\n//             <button onClick={() => handleEdit(product)}>Edit</button>\n//             <button onClick={() => handleDelete(product.id)}>Delete</button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProductList;\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const loadProducts = async () => {\n//       try {\n//         const data = await fetchProducts();\n//         console.log('Fetched products:', data); // Log the fetched data\n//         setProducts(data);\n//       } catch (error) {\n//         console.error('Error fetching products:', error); // Log any errors\n//       }\n//     };\n\n//     loadProducts();\n//   }, []);\n\n//   const handleDelete = (id) => {\n//     deleteProduct(id).then(() => {\n//       setProducts(products.filter(product => product.id !== id));\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {products.length > 0 ? (\n//         products.map(product => (\n//           <div key={product.id}>\n//             <h3>{product.name}</h3>\n//             <p>{product.description}</p>\n//             <p>Price: ${product.price}</p>\n//             <p>Quantity: {product.quantity}</p>\n//             <button onClick={() => handleDelete(product.id)}>Delete</button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No products available.</p> // Display a message if no products\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","fetchProducts","deleteProduct","ProductForm","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","isEditing","setIsEditing","selectedProduct","setSelectedProduct","loadProducts","data","console","log","error","handleDelete","id","filter","product","handleEdit","handleAdd","handleProductSaved","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","existingProduct","onProductSaved","onCancel","onClick","length","map","className","name","description","price","quantity","_c","$RefreshReg$"],"sources":["C:/Users/Satwika/Downloads/full_stack_project/fronte/src/components/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchProducts, deleteProduct } from '../api';\nimport ProductForm from './ProductForm';\n\nfunction ProductList() {\n  const [products, setProducts] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  // Define the loadProducts function\n  const loadProducts = async () => {\n    try {\n      const data = await fetchProducts();\n      console.log('Fetched products:', data);\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  // Load products when the component mounts\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  const handleDelete = async (id) => {\n    await deleteProduct(id);\n    setProducts(products.filter(product => product.id !== id));\n  };\n\n  const handleEdit = (product) => {\n    setSelectedProduct(product);\n    setIsEditing(true);\n  };\n\n  const handleAdd = () => {\n    setSelectedProduct(null);\n    setIsEditing(true);\n  };\n\n  const handleProductSaved = () => {\n    setIsEditing(false);\n    setSelectedProduct(null);\n    loadProducts(); // Refresh product list after saving\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setSelectedProduct(null);\n  };\n\n  return (\n    <div>\n      <h2>Product List</h2>\n      {isEditing ? (\n        <ProductForm \n          existingProduct={selectedProduct} \n          onProductSaved={handleProductSaved}\n          onCancel={handleCancel} \n        />\n      ) : (\n        <button onClick={handleAdd}>Add Product</button>\n      )}\n      {products.length > 0 ? (\n        products.map(product => (\n          <div key={product.id} className=\"product\">\n            <h3>{product.name}</h3>\n            <p>{product.description}</p>\n            <p>Price: ${product.price}</p>\n            <p>Quantity: {product.quantity}</p>\n            <button onClick={() => handleEdit(product)}>Edit</button>\n            <button onClick={() => handleDelete(product.id)}>Delete</button>\n          </div>\n        ))\n      ) : (\n        <p>No products available.</p>\n      )}\n    </div>\n  );\n}\n\nexport default ProductList;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchProducts, deleteProduct } from '../api';\n// import ProductForm from './ProductForm';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   useEffect(() => {\n//     const loadProducts = async () => {\n//       try {\n//         const data = await fetchProducts();\n//         console.log('Fetched products:', data);\n//         setProducts(data);\n//       } catch (error) {\n//         console.error('Error fetching products:', error);\n//       }\n//     };\n\n//     loadProducts();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     await deleteProduct(id);\n//     setProducts(products.filter(product => product.id !== id));\n//   };\n\n//   const handleEdit = (product) => {\n//     setSelectedProduct(product);\n//     setIsEditing(true);\n//   };\n\n//   const handleAdd = () => {\n//     setSelectedProduct(null);\n//     setIsEditing(true);\n//   };\n\n//   const handleProductSaved = () => {\n//     setIsEditing(false);\n//     setSelectedProduct(null);\n//     loadProducts(); // Refresh product list\n//   };\n\n//   const handleCancel = () => {\n//     setIsEditing(false);\n//     setSelectedProduct(null);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {isEditing ? (\n//         <ProductForm \n//           existingProduct={selectedProduct} \n//           onProductSaved={handleProductSaved}\n//           onCancel={handleCancel} \n//         />\n//       ) : (\n//         <button onClick={handleAdd}>Add Product</button>\n//       )}\n//       {products.length > 0 ? (\n//         products.map(product => (\n//           <div key={product.id} className=\"product\">\n//             <h3>{product.name}</h3>\n//             <p>{product.description}</p>\n//             <p>Price: ${product.price}</p>\n//             <p>Quantity: {product.quantity}</p>\n//             <button onClick={() => handleEdit(product)}>Edit</button>\n//             <button onClick={() => handleDelete(product.id)}>Delete</button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProductList;\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const loadProducts = async () => {\n//       try {\n//         const data = await fetchProducts();\n//         console.log('Fetched products:', data); // Log the fetched data\n//         setProducts(data);\n//       } catch (error) {\n//         console.error('Error fetching products:', error); // Log any errors\n//       }\n//     };\n\n//     loadProducts();\n//   }, []);\n\n//   const handleDelete = (id) => {\n//     deleteProduct(id).then(() => {\n//       setProducts(products.filter(product => product.id !== id));\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <h2>Product List</h2>\n//       {products.length > 0 ? (\n//         products.map(product => (\n//           <div key={product.id}>\n//             <h3>{product.name}</h3>\n//             <p>{product.description}</p>\n//             <p>Price: ${product.price}</p>\n//             <p>Quantity: {product.quantity}</p>\n//             <button onClick={() => handleDelete(product.id)}>Delete</button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No products available.</p> // Display a message if no products\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProductList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}